// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectX.Infrastructure.Data;

#nullable disable

namespace ProjectX.Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230328195930_AddMasterTemplateAndMasterTemplateTime")]
    partial class AddMasterTemplateAndMasterTemplateTime
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjectX.Core.Entities.Master", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Masters", (string)null);
                });

            modelBuilder.Entity("ProjectX.Core.Entities.MasterTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MasterId")
                        .HasColumnType("int");

                    b.Property<string>("TemplateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TemplateTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MasterId");

                    b.ToTable("MasterTemplates", (string)null);
                });

            modelBuilder.Entity("ProjectX.Core.Entities.MasterTemplateTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("MasterId")
                        .HasColumnType("int");

                    b.Property<int>("TemplateId")
                        .HasColumnType("int");

                    b.Property<string>("TimeStart")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MasterId");

                    b.HasIndex("TemplateId");

                    b.ToTable("TemplateTimes", (string)null);
                });

            modelBuilder.Entity("ProjectX.Core.Entities.WorkingDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MasterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("WorkDay")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MasterId");

                    b.ToTable("WorkingDays", (string)null);
                });

            modelBuilder.Entity("ProjectX.Core.Entities.MasterTemplate", b =>
                {
                    b.HasOne("ProjectX.Core.Entities.Master", "Master")
                        .WithMany("Templates")
                        .HasForeignKey("MasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Master");
                });

            modelBuilder.Entity("ProjectX.Core.Entities.MasterTemplateTime", b =>
                {
                    b.HasOne("ProjectX.Core.Entities.Master", null)
                        .WithMany("TemplateTimes")
                        .HasForeignKey("MasterId");

                    b.HasOne("ProjectX.Core.Entities.MasterTemplate", "MasterTemplate")
                        .WithMany("MasterTemplateTime")
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MasterTemplate");
                });

            modelBuilder.Entity("ProjectX.Core.Entities.WorkingDay", b =>
                {
                    b.HasOne("ProjectX.Core.Entities.Master", "Master")
                        .WithMany("WorkingDays")
                        .HasForeignKey("MasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Master");
                });

            modelBuilder.Entity("ProjectX.Core.Entities.Master", b =>
                {
                    b.Navigation("TemplateTimes");

                    b.Navigation("Templates");

                    b.Navigation("WorkingDays");
                });

            modelBuilder.Entity("ProjectX.Core.Entities.MasterTemplate", b =>
                {
                    b.Navigation("MasterTemplateTime");
                });
#pragma warning restore 612, 618
        }
    }
}
