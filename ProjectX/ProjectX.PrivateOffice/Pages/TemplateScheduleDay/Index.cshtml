@page
@Html.AntiForgeryToken()
@model ProjectX.PrivateOffice.Pages.TemplateScheduleDay.IndexModel
@using ProjectX.Core.Entities.Enums;
@using ProjectX.Core.Extentions;
@{
}

<div class="container">
    <div class="row">
        <div class="col-6">
            @foreach (var template in Model.MasterTimes.MasterTemplateTimes)
            {
                <form class="change-template-form">
                    <div class="row">
                        <div class="col-8">
                            <p class="fw-bold">@Model.MasterTemplateTypes[template.TemplateId]</p>
                        </div>
                        <div class="col-2">
                            <button type="button" onclick="changeTemplate(this)" class="btn btn-success float-end change-template">Изменить </button>
                        </div>
                        <div class="col-2">
                            <button type="button" class="btn btn-danger float-end delete-template" data-template-id="@template.TemplateId" data-bs-toggle="modal" data-bs-target="#deleteTemplate">Удалить </button>
                        </div>
                    </div>

                    @foreach (var time in template.TimesStart)
                    {
                        <div class="add-time">
                            <p>
                                <div class="input-group ">

                                    <input type="text" class="form-control input-change-template" value="@time" placeholder="Время начала" readonly><div class="input-group-append">
                                        <div class="input-group-append">
                                            <button class="btn btn-danger d-none delete-add-time-input" type="button" onclick="deleteAddTimeInput(this,'change-template-form')" data-toggle="tooltip" data-placement="top" title="Удалить время">
                                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-circle-fill" viewBox="0 0 16 16">
                                                    <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z"></path>
                                                </svg>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </p>
                        </div>
                    }
                    <button type="button" onclick="addTimeInput(this,'change-template-form')" class="btn btn-success d-none add-time-template">Добавить время </button>
                    <button type="button" onclick="saveChangesTemplate(this)" class="btn btn-success float-end d-none save-chahges-template">Сохранить </button>
                </form>
            }

        </div>
        <div class="col-6">
            <div class="row">
                <div class="col-6"><button type="button" onclick="addFormSchedule(this)" class="btn btn-success add-template">Добавить шаблон</button></div>

            </div>
            <div class="row">
                <div class="col-12 form-container">
                </div>
            </div>
        </div>
    </div>

</div>

@Html.Hidden("sourceUrl", Request.Path);
@section Scripts{
    <script type="text/javascript" language="javascript">

        $(document).ready(function () {
            
            var openModalDeleteTemplate = $('#deleteTemplate');
            $(openModalDeleteTemplate).on('show.bs.modal', function (e) {
                
                var templateId = $(e.relatedTarget).data("template-id");
                $(e.currentTarget).find('.modal-delete-template').data('template-id', templateId);

            });
        });

        function addFormSchedule(e) {
            var form = $('.create-template:last').clone();
            $(form).removeClass('d-none');
            $('.form-container').append($(form));
            var index = $(e).data("id");


            $(e).attr("disabled", true);


            // вынести в функцию мб?
            $(".dropdown-menu li a").click(function (e) {
                var id = $(e.currentTarget).data('id');
                var selText = $(this).text();
                var dropdown = $(this).parents('.dropdown').find('.dropdown-toggle');
                dropdown.html(selText);
                $(dropdown).attr('data-id', id);
                if (id == @Convert.ToInt32(MasterTemplateType.Custom)) {
                    $('.add-template-name').removeClass('d-none');

                } else {
                    $('.add-template-name').addClass('d-none');
                }
            });
        }

        // добавляем новые инпуты сразу после последнего инпута
        function addTimeInput(e, containerClassName) {
            var container = $(e).parents('.' + containerClassName);
            var child = $(container).find('.add-time').last().clone();
            $(child).find('input').val('');

            $(child).insertAfter(container.find('.add-time:last'));
            checkDeleteButtons(container);
        }

        function saveTemplate(e) {
            var sourceUrl = $('#sourceUrl').val();
            var container = $('.create-template:not(.d-none)');

            // получаем все время из всех импутов
            var times = [];
            var timesElement = $(container).find("input[id='InputTime']").each(function () {
                var element = $(this);
                times.push($(element).val());
            });

            var templateName = $(container).find('.add-template-name').val();

            var templateId = $(container).find('.dropdown-toggle').data('id');

            var requestData = {
                TemplateTypeId: parseInt(templateId),
                TimesStart: times,
                TemplateName: templateName
            };

            $.ajax({
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("XSRF-TOKEN", $('input:hidden[name="__RequestVerificationToken"]').val());
                },
                type: "POST",
                url: sourceUrl + "?handler=AddTemplate",
                data: requestData,
                success: function (data) {
                    console.log("SUCCESS!");
                    console.log(data);
                }
            });


            $('.add-template').attr("disabled", false);
            $('.form-container').html('');
        }

        function deleteTemplate(e) {
            
            var templateId = $(e).data("template-id");
            var sourceUrl = $('#sourceUrl').val();

            var requestData = {
                TemplateId: parseInt(templateId)
            };

            $.ajax({
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("XSRF-TOKEN", $('input:hidden[name="__RequestVerificationToken"]').val());
                },
                type: "POST",
                url: sourceUrl + "?handler=DeleteTemplate",
                data: requestData,
                success: function (data) {
                    console.log("SUCCESS!");
                    console.log(data);
                }
            });
        }

        function deleteAddTimeInput(e, containerClassName) {
            var container = $(e).parents('.' + containerClassName);
            var parent = $(e).parents('.add-time');
            $(parent).remove();
            checkDeleteButtons(container);
        }

        function checkDeleteButtons(container) {
            var elements = $(container).find('.add-time');
            var buttons = $(container).find('.delete-add-time-input');
            if (elements.length > 1) {

                $(buttons).removeClass('d-none');
            } else {
                $(buttons).addClass('d-none');
            }
        }

        function changeTemplate(e) {
            $(e).attr("disabled", true);
            var container = $(e).parents('.change-template-form');
            $(container).find('.save-chahges-template').removeClass('d-none');
            $(container).find('.add-time-template').removeClass('d-none');
            $(container).find('.input-change-template').attr("readonly", false);
            checkDeleteButtons(container);
        }

        function saveChangesTemplate(e) {

            var inputs = $(e).parents('.change-template-form').find('input:text');
            $(inputs).css("border-color", "#ced4da");
            var emptyInputs = $(inputs).filter(function () { return this.value == ""; });
            if ($(emptyInputs).length > 0) {
                $(emptyInputs).css("border-color", "#dc3545");
                return;
            }

            $(e).addClass('d-none');
            $('.change-template').attr("disabled", false);
            $('.input-change-template').attr("readonly", true);
            $('.change-template-form').find('.delete-add-time-input').addClass('d-none');
            $('.change-template-form').find('.add-time-template').addClass('d-none');
        }
    </script>
    }

<form class="create-template d-none">
    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <div class="dropdown">
                <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                    Выберите шаблон
                </button>
                <ul class="dropdown-menu">
                    <li><a data-id="@Convert.ToInt32(MasterTemplateType.Custom)" class="dropdown-item" href="#">@MasterTemplateType.Custom.GetDescription()</a></li>
                    @foreach (var type in Model.MasterTemplateTypes.Where(x => x.Key != (int)MasterTemplateType.Custom))
                    {
                        if (!Model.MasterTimes.MasterTemplateTimes.Select(x => x.TemplateId).Contains(type.Key))
                        {
                            <li><a data-id="@type.Key" class="dropdown-item" href="#">@type.Value</a></li>
                        }

                    }
                </ul>
            </div>
        </div>
        <input type="text" class="form-control d-none add-template-name" placeholder="Введите название шаблона">
    </div>
    <div class="add-time">
        <div class="input-group mb-3">

            <input type="text" class="form-control" id="InputTime" placeholder="Время начала">
            <div class="input-group-append">
                <button class="btn btn-danger d-none delete-add-time-input" type="button" onclick="deleteAddTimeInput(this, 'form-container')" data-toggle="tooltip" data-placement="top" title="Удалить время">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-circle-fill" viewBox="0 0 16 16">
                        <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z"></path>
                    </svg>
                </button>
            </div>
        </div>
    </div>


    <div class="mb-3 position-relative">
        <button type="button" class="btn btn-success" onclick="addTimeInput(this, 'form-container')">Добавить время</button>
        <button type="button" class="btn btn-success position-absolute bottom-0 end-0" onclick="saveTemplate(this)">Сохранить шаблон</button>
    </div>
</form>

<div class="modal fade" id="deleteTemplate" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Удаление шаблона</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Вы уверены, что хотите удалить шаблон?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Закрыть</button>
                <button type="button" onclick="deleteTemplate(this)" class="btn btn-danger modal-delete-template">Удалить</button>
            </div>
        </div>
    </div>
</div>
